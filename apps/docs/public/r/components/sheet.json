{
  "dependencies": [
    "@gentleduck/primitives",
    "@gentleduck/libs",
    "@gentleduck/motion",
    "@gentleduck/variants"
  ],
  "files": [
    {
      "content": "export * from './sheet'\nexport * from './sheet.constants'\n",
      "path": "sheet/index.ts",
      "target": "components/ui/index.ts",
      "type": "registry:ui"
    },
    {
      "content": "import { cva } from '@gentleduck/variants'\n\nexport const AnimSheetVariants = cva(\n  'pointer-events-all relative z-50 flex flex-col gap-4 overflow-hidden bg-background p-6 shadow-lg outline-hidden transition ease-in-out data-[open=false]:animate-out data-[open=true]:animate-in data-[open=false]:duration-400 data-[open=true]:duration-500',\n\n  {\n    defaultVariants: {\n      side: 'right',\n    },\n    variants: {\n      side: {\n        bottom:\n          'data-[open=false]:slide-out-to-bottom data-[open=true]:slide-in-from-bottom inset-x-0 bottom-0 h-3/4 h-fit max-h-screen w-full border-t sm:max-h-sm',\n        left: 'data-[open=false]:slide-out-to-left data-[open=true]:slide-in-from-left inset-y-0 left-0 h-screen max-h-screen w-3/4 w-fit border-r sm:max-w-sm',\n\n        right:\n          'data-[open=false]:slide-out-to-right data-[open=true]:slide-in-from-right inset-y-0 right-0 h-screen max-h-screen w-3/4 w-fit border-l sm:max-w-sm',\n\n        top: 'data-[open=false]:slide-out-to-top data-[open=true]:slide-in-from-top inset-x-0 top-0 h-3/4 h-fit max-h-screen w-full border-b sm:max-h-sm',\n      },\n    },\n  },\n)\n",
      "path": "sheet/sheet.constants.tsx",
      "target": "components/ui/sheet.constants.tsx",
      "type": "registry:ui"
    },
    {
      "content": "'use client'\n\nimport { cn } from '@gentleduck/libs/cn'\nimport { AnimVariants } from '@gentleduck/motion/anim'\nimport SheetPrimitive, { useSheetContext } from '@gentleduck/primitives/sheet'\nimport type { VariantProps } from '@gentleduck/variants'\nimport { X } from 'lucide-react'\nimport type React from 'react'\nimport { AnimSheetVariants } from './sheet.constants'\n\nfunction Sheet({ closeButton = true, ...props }: React.ComponentPropsWithoutRef<typeof SheetPrimitive.Root>) {\n  return <SheetPrimitive.Root closeButton={closeButton} {...props} />\n}\n\nfunction SheetTrigger({ children, ...props }: React.ComponentPropsWithoutRef<typeof SheetPrimitive.Trigger>) {\n  return <SheetPrimitive.Trigger {...props}>{children}</SheetPrimitive.Trigger>\n}\n\nexport function SheetCloseX({\n  ref,\n  size = 16,\n  children,\n  className,\n  ...props\n}: React.HTMLProps<HTMLButtonElement> & {\n  size?: number\n}): React.JSX.Element {\n  const { setOpen } = useSheetContext()\n\n  return (\n    <button\n      {...props}\n      aria-label=\"close\"\n      className={cn(\n        'absolute end-3 top-3 size-4 cursor-pointer rounded text-accent-foreground opacity-70 transition-all hover:opacity-100',\n        className,\n      )}\n      onClick={() => setOpen?.(false)}\n      ref={ref}\n      type=\"button\">\n      {children ?? <X aria-hidden size={size} />}\n    </button>\n  )\n}\n\nfunction SheetContent({\n  children,\n  className,\n  side = 'right',\n  ...props\n}: React.ComponentPropsWithRef<typeof SheetPrimitive.Content> &\n  VariantProps<typeof AnimSheetVariants>): React.JSX.Element {\n  return (\n    <SheetPrimitive.Portal>\n      <SheetPrimitive.Content\n        className={cn(AnimSheetVariants({ side }), className)}\n        SheetClose={SheetCloseX}\n        {...props}>\n        {children}\n      </SheetPrimitive.Content>\n      <SheetPrimitive.Overlay className={cn(AnimVariants())} />\n    </SheetPrimitive.Portal>\n  )\n}\n\nfunction SheetHeader({\n  className,\n  ref,\n  ...props\n}: React.ComponentPropsWithRef<typeof SheetPrimitive.Heading>): React.JSX.Element {\n  return (\n    <SheetPrimitive.Heading\n      className={cn('flex flex-col gap-1.5 text-left rtl:text-right', className)}\n      ref={ref}\n      {...props}\n    />\n  )\n}\n\nfunction SheetFooter({ className, ref, ...props }: React.HTMLProps<HTMLDivElement>): React.JSX.Element {\n  return <div className={cn(`flex justify-end gap-2 sm:flex-row sm:justify-end`, className)} ref={ref} {...props} />\n}\n\nfunction SheetTitle({\n  className,\n  ref,\n  ...props\n}: React.ComponentPropsWithRef<typeof SheetPrimitive.Title>): React.JSX.Element {\n  return (\n    <SheetPrimitive.Title\n      className={cn('font-semibold text-lg leading-none tracking-tight', className)}\n      ref={ref}\n      {...props}\n    />\n  )\n}\n\nconst SheetDescription = ({\n  className,\n  ref,\n  ...props\n}: React.ComponentPropsWithRef<typeof SheetPrimitive.Description>): React.JSX.Element => (\n  <SheetPrimitive.Description className={cn('text-muted-foreground text-sm', className)} ref={ref} {...props} />\n)\n\nconst SheetClose = SheetTrigger\n\nexport { Sheet, SheetTrigger, SheetContent, SheetHeader, SheetFooter, SheetTitle, SheetDescription, SheetClose }\n",
      "path": "sheet/sheet.tsx",
      "target": "components/ui/sheet.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "sheet",
  "root_folder": "sheet",
  "source": "/registry-ui-duckui/src/sheet",
  "type": "registry:ui"
}