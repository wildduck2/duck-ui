{
  "dependencies": [
    "@gentleduck/lib",
    "@gentleduck/primitives",
    "@gentleduck/motion"
  ],
  "files": [
    {
      "content": "'use client'\n\nimport { cn } from '@gentleduck/libs/cn'\nimport { AnimVariants } from '@gentleduck/motion/anim'\nimport * as HoverCardPrimitive from '@gentleduck/primitives/hover-card'\nimport type React from 'react'\nimport { Button } from '../button'\n\nfunction HoverCard({\n  skipDelayDuration,\n  delayDuration,\n  placement = 'top',\n  ...props\n}: React.ComponentPropsWithRef<typeof HoverCardPrimitive.Root>) {\n  return (\n    <HoverCardPrimitive.Root\n      data-slot=\"hover-card\"\n      delayDuration={delayDuration}\n      placement={placement}\n      skipDelayDuration={skipDelayDuration}\n      {...props}\n    />\n  )\n}\n\nfunction HoverCardTrigger({\n  children,\n  variant = 'outline',\n  asChild = false,\n  ...props\n}: React.ComponentPropsWithRef<typeof HoverCardPrimitive.Trigger> & React.ComponentPropsWithRef<typeof Button>) {\n  return (\n    <HoverCardPrimitive.Trigger asChild data-slot=\"hover-card-trigger\">\n      <Button {...props} asChild={asChild} variant={variant}>\n        {children}\n      </Button>\n    </HoverCardPrimitive.Trigger>\n  )\n}\n\nfunction HoverCardContent({\n  className,\n  children,\n  ...props\n}: React.ComponentPropsWithRef<typeof HoverCardPrimitive.Content>): React.JSX.Element {\n  return (\n    <HoverCardPrimitive.Content\n      aria-modal=\"false\"\n      data-slot=\"hover-card-content\"\n      className={cn(\n        AnimVariants(),\n        'relative z-50 h-fit w-fit overflow-hidden text-balance rounded-lg border border-border bg-popover p-6 text-popover-foreground opacity-0 shadow-sm outline-hidden starting:[&[data-open=true]:opacity-0] data-[open=true]:pointer-events-auto data-[open=true]:opacity-100',\n        className,\n      )}\n      role=\"dialog\"\n      {...props}>\n      {children}\n    </HoverCardPrimitive.Content>\n  )\n}\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n",
      "path": "hover-card/hover-card.tsx",
      "target": "components/ui/hover-card.tsx",
      "type": "registry:ui"
    },
    {
      "content": "export * from './hover-card'\n",
      "path": "hover-card/index.ts",
      "target": "components/ui/index.ts",
      "type": "registry:ui"
    }
  ],
  "name": "hover-card",
  "registryDependencies": [
    "button"
  ],
  "root_folder": "hover-card",
  "source": "/registry-ui-duckui/src/hover-card",
  "type": "registry:ui"
}