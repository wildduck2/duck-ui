{
  "files": [
    {
      "content": "'use client'\n\nimport { useMediaQuery } from '@gentleduck/hooks/use-media-query'\nimport { Button } from '@gentleduck/registry-ui-duckui/button'\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from '@gentleduck/registry-ui-duckui/command'\nimport { Drawer, DrawerContent, DrawerTrigger } from '@gentleduck/registry-ui-duckui/drawer'\nimport { Popover, PopoverContent, PopoverTrigger } from '@gentleduck/registry-ui-duckui/popover'\nimport * as React from 'react'\n\ntype Status = {\n  value: string\n  label: string\n}\n\nconst statuses: Status[] = [\n  {\n    label: 'Backlog',\n    value: 'backlog',\n  },\n  {\n    label: 'Todo',\n    value: 'todo',\n  },\n  {\n    label: 'In Progress',\n    value: 'in progress',\n  },\n  {\n    label: 'Done',\n    value: 'done',\n  },\n  {\n    label: 'Canceled',\n    value: 'canceled',\n  },\n]\n\nexport default function ComboBoxResponsive() {\n  const [open, setOpen] = React.useState(false)\n  const isDesktop = useMediaQuery('(min-width: 768px)')\n  const [selectedStatus, setSelectedStatus] = React.useState<Status | null>(null)\n\n  if (isDesktop) {\n    return (\n      <Popover onOpenChange={setOpen} open={open} placement=\"bottom-start\">\n        <PopoverTrigger asChild>\n          <Button className=\"w-[150px] justify-start\" variant=\"outline\">\n            {selectedStatus ? selectedStatus.label : '+ Set status'}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-[200px] p-0\">\n          <StatusList setOpen={setOpen} setSelectedStatus={setSelectedStatus} />\n        </PopoverContent>\n      </Popover>\n    )\n  }\n\n  return (\n    <Drawer onOpenChange={setOpen} open={open}>\n      <DrawerTrigger asChild>\n        <Button className=\"w-[150px] justify-start\" variant=\"outline\">\n          {selectedStatus ? selectedStatus.label : '+ Set status'}\n        </Button>\n      </DrawerTrigger>\n      <DrawerContent>\n        <div className=\"mt-4 border-t\">\n          <StatusList setOpen={setOpen} setSelectedStatus={setSelectedStatus} />\n        </div>\n      </DrawerContent>\n    </Drawer>\n  )\n}\n\nfunction StatusList({\n  setOpen,\n  setSelectedStatus,\n}: {\n  setOpen: (open: boolean) => void\n  setSelectedStatus: (status: Status | null) => void\n}) {\n  return (\n    <Command>\n      <CommandInput placeholder=\"Filter status...\" />\n      <CommandList>\n        <CommandEmpty>No results found.</CommandEmpty>\n        <CommandGroup>\n          {statuses.map((status) => (\n            <CommandItem\n              key={status.value}\n              onSelect={(value) => {\n                setSelectedStatus(statuses.find((priority) => priority.value === value) || null)\n                setOpen(false)\n              }}\n              value={status.value}>\n              {status.label}\n            </CommandItem>\n          ))}\n        </CommandGroup>\n      </CommandList>\n    </Command>\n  )\n}\n",
      "path": "combobox/combobox-5.tsx",
      "target": "components/combobox-5.tsx",
      "type": "registry:example"
    }
  ],
  "name": "combobox-5",
  "registryDependencies": [
    "popover",
    "command"
  ],
  "root_folder": "combobox",
  "source": "/registry-examples-duckui/src/combobox",
  "type": "registry:example"
}