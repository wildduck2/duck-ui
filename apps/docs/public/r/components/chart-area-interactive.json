{
  "categories": [
    "charts",
    "charts-area"
  ],
  "files": [
    {
      "content": "'use client'\n\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@gentleduck/registry-ui-duckui/card'\nimport {\n  type ChartConfig,\n  ChartContainer,\n  ChartLegend,\n  ChartLegendContent,\n  ChartTooltip,\n  ChartTooltipContent,\n} from '@gentleduck/registry-ui-duckui/chart'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@gentleduck/registry-ui-duckui/select'\nimport * as React from 'react'\nimport { Area, AreaChart, CartesianGrid, XAxis } from 'recharts'\nconst chartData = [\n  { date: '2024-04-01', desktop: 222, mobile: 150 },\n  { date: '2024-04-02', desktop: 97, mobile: 180 },\n  { date: '2024-04-03', desktop: 167, mobile: 120 },\n  { date: '2024-04-04', desktop: 242, mobile: 260 },\n  { date: '2024-04-05', desktop: 373, mobile: 290 },\n  { date: '2024-04-06', desktop: 301, mobile: 340 },\n  { date: '2024-04-07', desktop: 245, mobile: 180 },\n  { date: '2024-04-08', desktop: 409, mobile: 320 },\n  { date: '2024-04-09', desktop: 59, mobile: 110 },\n  { date: '2024-04-10', desktop: 261, mobile: 190 },\n  { date: '2024-04-11', desktop: 327, mobile: 350 },\n  { date: '2024-04-12', desktop: 292, mobile: 210 },\n  { date: '2024-04-13', desktop: 342, mobile: 380 },\n  { date: '2024-04-14', desktop: 137, mobile: 220 },\n  { date: '2024-04-15', desktop: 120, mobile: 170 },\n  { date: '2024-04-16', desktop: 138, mobile: 190 },\n  { date: '2024-04-17', desktop: 446, mobile: 360 },\n  { date: '2024-04-18', desktop: 364, mobile: 410 },\n  { date: '2024-04-19', desktop: 243, mobile: 180 },\n  { date: '2024-04-20', desktop: 89, mobile: 150 },\n  { date: '2024-04-21', desktop: 137, mobile: 200 },\n  { date: '2024-04-22', desktop: 224, mobile: 170 },\n  { date: '2024-04-23', desktop: 138, mobile: 230 },\n  { date: '2024-04-24', desktop: 387, mobile: 290 },\n  { date: '2024-04-25', desktop: 215, mobile: 250 },\n  { date: '2024-04-26', desktop: 75, mobile: 130 },\n  { date: '2024-04-27', desktop: 383, mobile: 420 },\n  { date: '2024-04-28', desktop: 122, mobile: 180 },\n  { date: '2024-04-29', desktop: 315, mobile: 240 },\n  { date: '2024-04-30', desktop: 454, mobile: 380 },\n  { date: '2024-05-01', desktop: 165, mobile: 220 },\n  { date: '2024-05-02', desktop: 293, mobile: 310 },\n  { date: '2024-05-03', desktop: 247, mobile: 190 },\n  { date: '2024-05-04', desktop: 385, mobile: 420 },\n  { date: '2024-05-05', desktop: 481, mobile: 390 },\n  { date: '2024-05-06', desktop: 498, mobile: 520 },\n  { date: '2024-05-07', desktop: 388, mobile: 300 },\n  { date: '2024-05-08', desktop: 149, mobile: 210 },\n  { date: '2024-05-09', desktop: 227, mobile: 180 },\n  { date: '2024-05-10', desktop: 293, mobile: 330 },\n  { date: '2024-05-11', desktop: 335, mobile: 270 },\n  { date: '2024-05-12', desktop: 197, mobile: 240 },\n  { date: '2024-05-13', desktop: 197, mobile: 160 },\n  { date: '2024-05-14', desktop: 448, mobile: 490 },\n  { date: '2024-05-15', desktop: 473, mobile: 380 },\n  { date: '2024-05-16', desktop: 338, mobile: 400 },\n  { date: '2024-05-17', desktop: 499, mobile: 420 },\n  { date: '2024-05-18', desktop: 315, mobile: 350 },\n  { date: '2024-05-19', desktop: 235, mobile: 180 },\n  { date: '2024-05-20', desktop: 177, mobile: 230 },\n  { date: '2024-05-21', desktop: 82, mobile: 140 },\n  { date: '2024-05-22', desktop: 81, mobile: 120 },\n  { date: '2024-05-23', desktop: 252, mobile: 290 },\n  { date: '2024-05-24', desktop: 294, mobile: 220 },\n  { date: '2024-05-25', desktop: 201, mobile: 250 },\n  { date: '2024-05-26', desktop: 213, mobile: 170 },\n  { date: '2024-05-27', desktop: 420, mobile: 460 },\n  { date: '2024-05-28', desktop: 233, mobile: 190 },\n  { date: '2024-05-29', desktop: 78, mobile: 130 },\n  { date: '2024-05-30', desktop: 340, mobile: 280 },\n  { date: '2024-05-31', desktop: 178, mobile: 230 },\n  { date: '2024-06-01', desktop: 178, mobile: 200 },\n  { date: '2024-06-02', desktop: 470, mobile: 410 },\n  { date: '2024-06-03', desktop: 103, mobile: 160 },\n  { date: '2024-06-04', desktop: 439, mobile: 380 },\n  { date: '2024-06-05', desktop: 88, mobile: 140 },\n  { date: '2024-06-06', desktop: 294, mobile: 250 },\n  { date: '2024-06-07', desktop: 323, mobile: 370 },\n  { date: '2024-06-08', desktop: 385, mobile: 320 },\n  { date: '2024-06-09', desktop: 438, mobile: 480 },\n  { date: '2024-06-10', desktop: 155, mobile: 200 },\n  { date: '2024-06-11', desktop: 92, mobile: 150 },\n  { date: '2024-06-12', desktop: 492, mobile: 420 },\n  { date: '2024-06-13', desktop: 81, mobile: 130 },\n  { date: '2024-06-14', desktop: 426, mobile: 380 },\n  { date: '2024-06-15', desktop: 307, mobile: 350 },\n  { date: '2024-06-16', desktop: 371, mobile: 310 },\n  { date: '2024-06-17', desktop: 475, mobile: 520 },\n  { date: '2024-06-18', desktop: 107, mobile: 170 },\n  { date: '2024-06-19', desktop: 341, mobile: 290 },\n  { date: '2024-06-20', desktop: 408, mobile: 450 },\n  { date: '2024-06-21', desktop: 169, mobile: 210 },\n  { date: '2024-06-22', desktop: 317, mobile: 270 },\n  { date: '2024-06-23', desktop: 480, mobile: 530 },\n  { date: '2024-06-24', desktop: 132, mobile: 180 },\n  { date: '2024-06-25', desktop: 141, mobile: 190 },\n  { date: '2024-06-26', desktop: 434, mobile: 380 },\n  { date: '2024-06-27', desktop: 448, mobile: 490 },\n  { date: '2024-06-28', desktop: 149, mobile: 200 },\n  { date: '2024-06-29', desktop: 103, mobile: 160 },\n  { date: '2024-06-30', desktop: 446, mobile: 400 },\n]\n\nconst chartConfig = {\n  desktop: {\n    color: 'var(--chart-1)',\n    label: 'Desktop',\n  },\n  mobile: {\n    color: 'var(--chart-2)',\n    label: 'Mobile',\n  },\n  visitors: {\n    label: 'Visitors',\n  },\n} satisfies ChartConfig\n\nexport default function Component() {\n  const [timeRange, setTimeRange] = React.useState('90d')\n\n  const filteredData = chartData.filter((item) => {\n    const date = new Date(item.date)\n    const referenceDate = new Date('2024-06-30')\n    let daysToSubtract = 90\n    if (timeRange === '30d') {\n      daysToSubtract = 30\n    } else if (timeRange === '7d') {\n      daysToSubtract = 7\n    }\n    const startDate = new Date(referenceDate)\n    startDate.setDate(startDate.getDate() - daysToSubtract)\n    return date >= startDate\n  })\n\n  return (\n    <Card>\n      <CardHeader className=\"flex items-center gap-2 space-y-0 border-b py-5 sm:flex-row\">\n        <div className=\"grid flex-1 gap-1 text-center sm:text-left\">\n          <CardTitle>Area Chart - Interactive</CardTitle>\n          <CardDescription>Showing total visitors for the last 3 months</CardDescription>\n        </div>\n        <Select onValueChange={setTimeRange} value={timeRange}>\n          <SelectTrigger aria-label=\"Select a value\" className=\"w-[160px] rounded-lg sm:ml-auto\">\n            <SelectValue placeholder=\"Last 3 months\" />\n          </SelectTrigger>\n          <SelectContent className=\"rounded-xl\">\n            <SelectItem className=\"rounded-lg\" value=\"90d\">\n              Last 3 months\n            </SelectItem>\n            <SelectItem className=\"rounded-lg\" value=\"30d\">\n              Last 30 days\n            </SelectItem>\n            <SelectItem className=\"rounded-lg\" value=\"7d\">\n              Last 7 days\n            </SelectItem>\n          </SelectContent>\n        </Select>\n      </CardHeader>\n      <CardContent className=\"px-2 pt-4 sm:px-6 sm:pt-6\">\n        <ChartContainer className=\"aspect-auto h-[250px] w-full\" config={chartConfig}>\n          <AreaChart data={filteredData}>\n            <defs>\n              <linearGradient id=\"fillDesktop\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"var(--color-desktop)\" stopOpacity={0.8} />\n                <stop offset=\"95%\" stopColor=\"var(--color-desktop)\" stopOpacity={0.1} />\n              </linearGradient>\n              <linearGradient id=\"fillMobile\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"var(--color-mobile)\" stopOpacity={0.8} />\n                <stop offset=\"95%\" stopColor=\"var(--color-mobile)\" stopOpacity={0.1} />\n              </linearGradient>\n            </defs>\n            <CartesianGrid vertical={false} />\n            <XAxis\n              axisLine={false}\n              dataKey=\"date\"\n              minTickGap={32}\n              tickFormatter={(value) => {\n                const date = new Date(value)\n                return date.toLocaleDateString('en-US', {\n                  day: 'numeric',\n                  month: 'short',\n                })\n              }}\n              tickLine={false}\n              tickMargin={8}\n            />\n            <ChartTooltip\n              content={\n                <ChartTooltipContent\n                  indicator=\"dot\"\n                  labelFormatter={(value) => {\n                    return new Date(value).toLocaleDateString('en-US', {\n                      day: 'numeric',\n                      month: 'short',\n                    })\n                  }}\n                />\n              }\n              cursor={false}\n            />\n            <Area dataKey=\"mobile\" fill=\"url(#fillMobile)\" stackId=\"a\" stroke=\"var(--color-mobile)\" type=\"natural\" />\n            <Area dataKey=\"desktop\" fill=\"url(#fillDesktop)\" stackId=\"a\" stroke=\"var(--color-desktop)\" type=\"natural\" />\n            <ChartLegend content={<ChartLegendContent />} />\n          </AreaChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  )\n}\n",
      "path": "charts/chart-area-interactive/chart-area-interactive.tsx",
      "target": "components/chart-area-interactive.tsx",
      "type": "registry:block"
    }
  ],
  "name": "chart-area-interactive",
  "registryDependencies": [
    "card",
    "chart",
    "select"
  ],
  "root_folder": "charts/chart-area-interactive",
  "source": "/registry-examples-duckui/src/charts/chart-area-interactive",
  "type": "registry:block"
}