{
  "dependencies": [
    "@gentleduck/libs"
  ],
  "files": [
    {
      "content": "'use client'\n\nimport { cn } from '@gentleduck/libs/cn'\nimport * as React from 'react'\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n  useDropdownMenuContext,\n} from '../dropdown-menu'\n\nfunction ContextMenu(props: React.ComponentPropsWithoutRef<typeof DropdownMenu>) {\n  return <DropdownMenu contextMenu {...props} data-slot=\"context-menu\" />\n}\n\nfunction ContextMenuTrigger(props: React.ComponentPropsWithoutRef<typeof DropdownMenuTrigger>) {\n  const { triggerRef, open, onOpenChange } = useDropdownMenuContext()\n\n  React.useLayoutEffect(() => {\n    triggerRef.current?.addEventListener('click', (e) => {\n      e.preventDefault()\n    })\n\n    triggerRef.current?.addEventListener('contextmenu', (e) => {\n      e.preventDefault()\n      if (open) return\n\n      const trigger = triggerRef.current\n      const content = trigger?.nextSibling as HTMLDivElement\n      if (!trigger || !content) return\n\n      const mouseX = e.clientX\n      const mouseY = e.clientY\n\n      const viewportWidth = window.innerWidth\n      const viewportHeight = window.innerHeight\n\n      let left = mouseX + 4\n      let top = mouseY + 4\n\n      if (mouseX > viewportWidth * 0.5) {\n        left = mouseX - 210\n      }\n\n      if (mouseY > viewportHeight * 0.6) {\n        top = mouseY - 310\n      }\n\n      content.style.transform = 'translate(0,0)'\n      content.style.left = `${left}px`\n      content.style.top = `${top}px`\n      content.style.zIndex = '9999'\n      setTimeout(() => {\n        onOpenChange(true)\n      }, 100)\n    })\n  }, [])\n\n  return (\n    <DropdownMenuTrigger\n      {...props}\n      className={cn(\n        'h-[200px] w-[300px] justify-center border-dashed bg-background p-2 hover:bg-background',\n        props.className,\n      )}\n      data-slot=\"context-menu-trigger\"\n    />\n  )\n}\n\nfunction ContextMenuGroup(props: React.ComponentPropsWithoutRef<typeof DropdownMenuGroup>) {\n  return <DropdownMenuGroup {...props} data-slot=\"context-menu-group\" />\n}\n\nfunction ContextMenuSub(props: React.ComponentPropsWithoutRef<typeof DropdownMenuSub>) {\n  return <DropdownMenuSub {...props} data-slot=\"context-menu-sub\" />\n}\n\nfunction ContextMenuRadioGroup(props: React.ComponentPropsWithoutRef<typeof DropdownMenuRadioGroup>) {\n  return <DropdownMenuRadioGroup {...props} data-slot=\"context-menu-radio-group\" />\n}\n\nfunction ContextMenuSubTrigger(props: React.ComponentPropsWithoutRef<typeof DropdownMenuSubTrigger>) {\n  return <DropdownMenuSubTrigger {...props} data-slot=\"context-menu-sub-trigger\" />\n}\n\nfunction ContextMenuSubContent(props: React.ComponentPropsWithoutRef<typeof DropdownMenuSubContent>) {\n  return <DropdownMenuSubContent {...props} data-slot=\"context-menu-sub-content\" />\n}\n\nfunction ContextMenuContent(props: React.ComponentPropsWithoutRef<typeof DropdownMenuContent>) {\n  return <DropdownMenuContent {...props} className={cn('fixed', props.className)} data-slot=\"context-menu-content\" />\n}\n\nfunction ContextMenuItem(props: React.ComponentPropsWithoutRef<typeof DropdownMenuItem>) {\n  return <DropdownMenuItem {...props} data-slot=\"context-menu-item\" />\n}\n\nfunction ContextMenuCheckboxItem(props: React.ComponentPropsWithoutRef<typeof DropdownMenuCheckboxItem>) {\n  return <DropdownMenuCheckboxItem {...props} data-slot=\"context-menu-checkbox-item\" />\n}\n\nfunction ContextMenuRadioItem(props: React.ComponentPropsWithoutRef<typeof DropdownMenuRadioItem>) {\n  return <DropdownMenuRadioItem {...props} data-slot=\"context-menu-radio-item\" />\n}\n\nfunction ContextMenuLabel(props: React.ComponentPropsWithoutRef<typeof DropdownMenuLabel>) {\n  return <DropdownMenuLabel {...props} data-slot=\"context-menu-label\" />\n}\n\nfunction ContextMenuSeparator(props: React.ComponentPropsWithoutRef<typeof DropdownMenuSeparator>) {\n  return <DropdownMenuSeparator {...props} data-slot=\"context-menu-separator\" />\n}\n\nfunction ContextMenuShortcut(props: React.ComponentPropsWithoutRef<typeof DropdownMenuShortcut>) {\n  return <DropdownMenuShortcut {...props} data-slot=\"context-menu-shortcut\" />\n}\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n",
      "path": "context-menu/context-menu.tsx",
      "target": "components/ui/context-menu.tsx",
      "type": "registry:ui"
    },
    {
      "content": "export * from './context-menu'\n",
      "path": "context-menu/index.ts",
      "target": "components/ui/index.ts",
      "type": "registry:ui"
    }
  ],
  "name": "context-menu",
  "registryDependencies": [
    "dropdown-menu"
  ],
  "root_folder": "context-menu",
  "source": "/registry-ui-duckui/src/context-menu",
  "type": "registry:ui"
}