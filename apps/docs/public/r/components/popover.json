{
  "dependencies": [
    "@gentleduck/primitives",
    "@gentleduck/libs",
    "@gentleduck/motion"
  ],
  "files": [
    {
      "content": "export * from './popover'\n",
      "path": "popover/index.ts",
      "target": "components/ui/index.ts",
      "type": "registry:ui"
    },
    {
      "content": "'use client'\n\nimport { cn } from '@gentleduck/libs/cn'\nimport { AnimVariants } from '@gentleduck/motion/anim'\nimport * as PopoverPrimitive from '@gentleduck/primitives/popover'\nimport type * as React from 'react'\nimport { Portal } from '../portal'\n\nconst Popover = ({ children, ...props }: React.ComponentPropsWithRef<typeof PopoverPrimitive.Root>) => {\n  return (\n    <PopoverPrimitive.Root {...props} data-slot=\"popover\">\n      {children}\n    </PopoverPrimitive.Root>\n  )\n}\n\nfunction PopoverTrigger({ children, ...props }: React.ComponentPropsWithRef<typeof PopoverPrimitive.Trigger>) {\n  return (\n    <PopoverPrimitive.Trigger {...props} data-slot=\"popover-trigger\">\n      {children}\n    </PopoverPrimitive.Trigger>\n  )\n}\n\nfunction PopoverContent({\n  children,\n  className,\n  ref,\n  ...props\n}: React.ComponentPropsWithRef<typeof PopoverPrimitive.Content>): React.JSX.Element {\n  return (\n    <Portal data-slot=\"popover-portal\">\n      <PopoverPrimitive.Content\n        className={cn(\n          AnimVariants(),\n          'data-[open=false]:fade-out-0 data-[open=true]:fade-in-0 data-[open=false]:zoom-out-95 data-[open=true]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 pointer-events-none relative z-50 flex h-fit w-72 flex-col overflow-hidden text-balance rounded-md border border-border bg-popover p-4 text-popover-foreground opacity-0 shadow-sm outline-hidden starting:[&[data-open=true]:opacity-0] data-[open=true]:pointer-events-auto data-[open=true]:opacity-100',\n          className,\n        )}\n        data-slot=\"popover-content\"\n        ref={ref}\n        {...props}>\n        {children}\n      </PopoverPrimitive.Content>\n    </Portal>\n  )\n}\n\nconst PopoverClose = PopoverTrigger\n\nconst PopoverPortal = ({ children, ...props }: React.ComponentPropsWithRef<typeof PopoverPrimitive.Portal>) => {\n  return (\n    <PopoverPrimitive.Portal {...props} data-slot=\"popover-portal\">\n      {children}\n    </PopoverPrimitive.Portal>\n  )\n}\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverClose, PopoverPortal }\n",
      "path": "popover/popover.tsx",
      "target": "components/ui/popover.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "popover",
  "root_folder": "popover",
  "source": "/registry-ui-duckui/src/popover",
  "type": "registry:ui"
}