{
  "name": "hover-card",
  "type": "registry:ui",
  "dependencies": [
    "@gentleduck/lib",
    "@gentleduck/primitives",
    "@gentleduck/motion",
    "@gentleduck/variants"
  ],
  "registryDependencies": [
    "button"
  ],
  "root_folder": "hover-card",
  "files": [
    {
      "path": "hover-card/hover-card.tsx",
      "content": "'use client'\n\nimport { cn } from '@gentleduck/libs/cn'\nimport { AnimDialogVariants, AnimVariants } from '@gentleduck/motion/anim'\nimport * as HoverCardPrimitive from '@gentleduck/primitives/tooltip'\nimport { VariantProps } from '@gentleduck/variants'\nimport type React from 'react'\nimport { Button } from '../button'\n\nfunction HoverCard({\n  skipDelayDuration,\n  delayDuration,\n  placement = 'bottom',\n  ...props\n}: React.ComponentPropsWithRef<typeof HoverCardPrimitive.Root>) {\n  return (\n    <HoverCardPrimitive.Root\n      skipDelayDuration={skipDelayDuration}\n      delayDuration={delayDuration}\n      placement={placement}\n      {...props}\n    />\n  )\n}\n\nfunction HoverCardTrigger({\n  children,\n  variant = 'outline',\n  asChild = false,\n  ...props\n}: React.ComponentPropsWithRef<typeof HoverCardPrimitive.Trigger> & React.ComponentPropsWithRef<typeof Button>) {\n  return (\n    <HoverCardPrimitive.Trigger asChild>\n      <Button {...props} variant={variant} asChild={asChild}>\n        {children}\n      </Button>\n    </HoverCardPrimitive.Trigger>\n  )\n}\n\nfunction HoverCardContent({\n  className,\n  children,\n  animation = 'default',\n  overlay = 'nothing',\n  ...props\n}: React.ComponentPropsWithRef<typeof HoverCardPrimitive.Content> & {\n  animation?: VariantProps<typeof AnimDialogVariants>['animation']\n  overlay?: VariantProps<typeof AnimVariants>['overlay']\n}): React.JSX.Element {\n  return (\n    <HoverCardPrimitive.Content\n      role=\"HoverCard\"\n      className={cn(\n        AnimVariants({ overlay }),\n        AnimDialogVariants({ animation }),\n        'absolute z-50 max-h-fit w-fit max-w-[300px] text-balance border border-border bg-popover p-4 text-popover-foreground',\n        className,\n      )}\n      {...props}>\n      {children}\n    </HoverCardPrimitive.Content>\n  )\n}\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n",
      "type": "registry:ui",
      "target": "components/ui/hover-card.tsx"
    },
    {
      "path": "hover-card/index.ts",
      "content": "export * from './hover-card'\n",
      "type": "registry:ui",
      "target": "components/ui/index.ts"
    }
  ],
  "source": "/registry-ui-duckui/src/hover-card"
}