import type { Metadata } from 'next'
import './globals.css'
import '@gentleduck/motion/css'
import './mdx.css'
import 'public/duck-ui/themes.css'
import { cn } from '@gentleduck/libs/cn'
import { Toaster } from '@gentleduck/registry-ui-duckui/sonner'
import { KeyProvider } from '@gentleduck/vim/react'
import { Analytics as VercelAnalytics } from '@vercel/analytics/react'
import { TailwindIndicator } from '~/components/layouts'
import { ThemeProvider } from '~/components/providers'
import { ThemeWrapper } from '~/components/themes'
import { ActiveThemeProvider } from '~/components/active-theme'

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  // <link href="/fonts/Geist-VF.woff2" rel="preload" as="font" type="font/woff2" crossOrigin="anonymous" />
  // <link href="/fonts/JetBrainsMono-MD.woff2" rel="preload" as="font" type="font/woff2" crossOrigin="anonymous" />
  return (
    <html lang="ar" dir="ltr" suppressHydrationWarning>
      <head>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="" />
        <link
          href="https://fonts.googleapis.com/css2?family=Geist:wght@100..900&family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&display=swap"
          rel="stylesheet"
        />
      </head>
      <body className={cn('min-h-svh bg-background font-sans antialiased duck')}>
        <KeyProvider timeoutMs={100}>
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
            enableColorScheme>
            <ThemeWrapper>
              <div vaul-drawer-wrapper="" className="theme-container">
                <div className="relative flex min-h-svh flex-col bg-background">{children}</div>
              </div>

              <VercelAnalytics />
              <Toaster />
              {process.env.NODE_ENV === 'development' && <TailwindIndicator />}
            </ThemeWrapper>
          </ThemeProvider>
        </KeyProvider>
      </body>
    </html>
  )
}
